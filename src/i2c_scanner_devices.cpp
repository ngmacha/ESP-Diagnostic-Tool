#include "i2c_scanner.h"

/*
 * This file is automatically generated by https://i2cdevices.org/
 *
 * It's intended to be used by the ESP diagnostic tool at
 * https://github.com/romkey/ESP-Diagnostic-Tool
 *
 * To update the known device list in the diagnostic tool,
 * generate a new version of this file, copy it to the src
 * directory and rebuild the tool.
 */

i2c_device_t i2c_scanner_known_devices[] = {
 { "AD7746", "24-Bit Capacitance-to-Digital Converter with Temperature Sensor", (const byte *)"\x48" },
 { "ADS1115", "4-channel 16-bit ADC", (const byte *)"\x4a\x4b" },
 { "ADXL345", "3-axis accelerometer", (const byte *)"\x1d\x53" },
 { "AK8975", "3-axis magnetometer", (const byte *)"\x0c\x0d\x0e\x0f" },
 { "AM2315", "Humidity/Temp sensor", (const byte *)"\x5c" },
 { "AMG8833", "IR Thermal Camera Breakout", (const byte *)"\x68\x69" },
 { "APDS-9960", "IR/Color/Proximity Sensor", (const byte *)"\x39" },
 { "BMA180", "Accelerometer", (const byte *)"\x77" },
 { "BME280", "Temp/Barometric/Humidity", (const byte *)"\x76\x77" },
 { "BMP085", "Temp/Barometric", (const byte *)"\x77" },
 { "BMP180", "Temp/Barometric", (const byte *)"\x77" },
 { "BMP280", "Temp/Barometric", (const byte *)"\x76\x77" },
 { "BNO055", "Absolute Orientation Sensor", (const byte *)"\x28\x29" },
 { "CAP1188", "8-channel Capacitive Touch", (const byte *)"\x28\x29\x2a\x2b\x2c\x2d" },
 { "CCS811", "VOC sensor", (const byte *)"\x5a\x5b" },
 { "Chirp!", "Water sensor", (const byte *)"\x20" },
 { "DRV2605", "Haptic Motor Driver", (const byte *)"\x5a" },
 { "DS1307", "64 x 8 Serial Real-Time Clock", (const byte *)"\x68" },
 { "DS3231", "Extremely Accurate RTC/TCXO/Crystal", (const byte *)"\x68" },
 { "FT6x06", "Capacitive Touch Driver", (const byte *)"\x38" },
 { "FXAS21002", "3-axis gyroscope", (const byte *)"\x20\x21" },
 { "FXOS8700", "Accelerometer/Magnetometer", (const byte *)"\x1e\x1f" },
 { "HDC1008", "Humidity/Temp sensor", (const byte *)"\x42\x43" },
 { "HMC5883", "Magnetometer", (const byte *)"\x1e" },
 { "HT16K33", "LED Matrix Driver", (const byte *)"\x70\x71\x72\x73\x74\x75\x76\x77" },
 { "HTU21D-F", "Humidity/Temp Sensor", (const byte *)"\x40" },
 { "INA219", "High-Side DC Current/Voltage sensor", (const byte *)"\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f" },
 { "IS31FL3731", "144-LED CharliePlex driver", (const byte *)"\x66\x77" },
 { "ISL29125", "Color Sensor", (const byte *)"\x44" },
 { "ITG3200", "Gyro", (const byte *)"\x68\x69" },
 { "L3GD20H", "gyroscope", (const byte *)"\x6a\x6b" },
 { "LIS3DH", "3-axis accelerometer", (const byte *)"\x18\x19" },
 { "LSM303", "Triple-axis Accelerometer+Magnetometer (Compass)", (const byte *)"\x18\x1e" },
 { "LSM303", "Triple-axis Accelerometer+Magnetometer (Compass)", (const byte *)"\x19\x1e" },
 { "MAG3110", "3-Axis Magnetometer", (const byte *)"\x0e" },
 { "MAX3010x", "Pulse &amp; Oximetry sensor", (const byte *)"\x57" },
 { "MB85RC", "Ferroelectric RAM", (const byte *)"\x50\x51\x52\x53\x54\x55\x56\x57" },
 { "MCP23008", "I2C GPIO expander", (const byte *)"\x20\x21\x22\x23\x24\x25\x26\x27" },
 { "MCP23017", "I2C GPIO expander", (const byte *)"\x20\x21\x22\x23\x24\x25\x26\x27" },
 { "MCP4725A0", "12-bit DAC", (const byte *)"\x60\x61" },
 { "MCP4725A1", "12-bit DAC", (const byte *)"\x62\x63" },
 { "MCP4725A2", "12-bit DAC", (const byte *)"\x64\x65" },
 { "MCP4725A3", "12-bit DAC", (const byte *)"\x66\x67" },
 { "MCP9808", "temp sensor", (const byte *)"\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f" },
 { "MLX9061x", "IR temperature sensor", (const byte *)"\x5a" },
 { "MMA845x", "3-axis Accelerometer", (const byte *)"\x1c\x1d" },
 { "MPL115A2", "Barometric Pressure", (const byte *)"\x60" },
 { "MPL3115A2", "Barometric Pressure", (const byte *)"\x60" },
 { "MPR121", "12-point capacitive touch sensor", (const byte *)"\x5a\x5b\x5c\x5d" },
 { "MPU-9250", "9-DoF IMU", (const byte *)"\x68\x69" },
 { "MS5607/MS5611", "Barometric Pressure", (const byte *)"\x76\x77" },
 { "Nunchuck controller", "Nintendo", (const byte *)"\x52" },
 { "PCA9685", "16-channel PWM driver default address", (const byte *)"\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f" },
 { "PCF8523", "RTC", (const byte *)"\x68" },
 { "PN532", "NFC/RFID reader", (const byte *)"\x48" },
 { "SGP30", "Gas Sensor", (const byte *)"\x58" },
 { "SHT31", "Humidity/Temp sensor", (const byte *)"\x44\x45" },
 { "Si1145", "Light/IR Sensor", (const byte *)"\x60" },
 { "Si4713", "FM Transmitter with RDS", (const byte *)"\x11\x63" },
 { "Si5351A", "Clock Generator", (const byte *)"\x60\x61" },
 { "Si7021", "Humidity/Temp sensor", (const byte *)"\x40" },
 { "SSD1305", "monochrome OLED", (const byte *)"\x3c\x3d" },
 { "SSD1306", "monochrome OLED", (const byte *)"\x3c\x3d" },
 { "STMPE610/STMPE811", "Resistive Touch controller", (const byte *)"\x41\x44" },
 { "TCA9548", "1-to-8 I2C Multiplexer", (const byte *)"\x70\x71\x72\x73\x74\x75\x76\x77" },
 { "TCS34725", "color sensor", (const byte *)"\x29" },
 { "TEA5767", "Radio receiver", (const byte *)"\x60" },
 { "TMP006", "IR Temperature sensor", (const byte *)"\x40\x41\x42\x43\x44\x45\x46\x47" },
 { "TMP007", "IR Temperature sensor", (const byte *)"\x40\x41\x42\x43\x44\x45\x46\x47" },
 { "TMP102", "Temperature sensor", (const byte *)"\x4a\x4b" },
 { "TPA2016", "I2C-controlled Amplifier", (const byte *)"\x58" },
 { "TSL2561", "light sensor", (const byte *)"\x39\x49" },
 { "TSL2591", "light sensor", (const byte *)"\x29" },
 { "VCNL40x0", "proximity sensor", (const byte *)"\x13" },
 { "VEML6070", "UV Index", (const byte *)"\x38\x39" },
 { "VL53L0x", "Time Of Flight distance sensor", (const byte *)"\x29" },
 { "VL6180X", "Time Of Flight distance sensor", (const byte *)"\x29" },
};

int i2c_scanner_known_devices_length = sizeof(i2c_scanner_known_devices)/sizeof(i2c_device_t);
